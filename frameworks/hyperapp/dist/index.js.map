{"version":3,"sources":["dist/index.js"],"names":["EMPTY_OBJ","EMPTY_ARR","id$1","a","map","isArray","Array","enqueue","requestAnimationFrame","setTimeout","createClass","obj","out","tmp","k","length","shouldRestart","b","getKey","vdom","key","patchProperty","node","oldValue","newValue","listener","isSvg","setProperty","events","slice","addEventListener","removeEventListener","removeAttribute","setAttribute","createNode","props","type","document","createTextNode","tag","createElementNS","is","createElement","i","children","appendChild","maybeVNode","patch","parent","oldVNode","newVNode","nodeValue","insertBefore","removeChild","tmpVKid","oldVKid","oldKey","newKey","oldProps","newProps","oldVKids","newVKids","oldHead","newHead","oldTail","newTail","keyed","newKeyed","memo","propsChanged","text","recycleNode","nodeType","createVNode","nodeName","toLowerCase","call","childNodes","value","h","class","c","adjectives","colors","nouns","id","random","max","Math","round","buildData","count","data","push","label","append1K","state","concat","create1K","create10K","clearAllRows","deleteRow","filter","d","updateEveryTenth","updateRow","selected","undefined","selectRow","swapRows","temp","Row","styleClass","onclick","aria-hidden","view","subscriptions","dispatch","init","busy","subs","update","newState","render","oldSubs","newSubs","oldSub","newSub","patchSubs","parentNode","event","this","action","fx","app","getElementById"],"mappings":"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","sourcesContent":["(function () {\n  'use strict';\n\n  var SSR_NODE = 1;\n  var TEXT_NODE = 3;\n  var EMPTY_OBJ = {};\n  var EMPTY_ARR = [];\n  var SVG_NS = \"http://www.w3.org/2000/svg\";\n\n  var id$1 = (a) => a;\n  var map = EMPTY_ARR.map;\n  var isArray = Array.isArray;\n  var enqueue =\n    typeof requestAnimationFrame !== \"undefined\"\n      ? requestAnimationFrame\n      : setTimeout;\n\n  var createClass = (obj) => {\n    var out = \"\";\n\n    if (typeof obj === \"string\") return obj\n\n    if (isArray(obj)) {\n      for (var k = 0, tmp; k < obj.length; k++) {\n        if ((tmp = createClass(obj[k]))) {\n          out += (out && \" \") + tmp;\n        }\n      }\n    } else {\n      for (var k in obj) {\n        if (obj[k]) out += (out && \" \") + k;\n      }\n    }\n\n    return out\n  };\n\n  var shouldRestart = (a, b) => {\n    for (var k in { ...a, ...b }) {\n      if (typeof (isArray(a[k]) ? a[k][0] : a[k]) === \"function\") {\n        b[k] = a[k];\n      } else if (a[k] !== b[k]) return true\n    }\n  };\n\n  var patchSubs = (oldSubs, newSubs = EMPTY_ARR, dispatch) => {\n    for (\n      var subs = [], i = 0, oldSub, newSub;\n      i < oldSubs.length || i < newSubs.length;\n      i++\n    ) {\n      oldSub = oldSubs[i];\n      newSub = newSubs[i];\n\n      subs.push(\n        newSub && newSub !== true\n          ? !oldSub ||\n            newSub[0] !== oldSub[0] ||\n            shouldRestart(newSub[1], oldSub[1])\n            ? [\n                newSub[0],\n                newSub[1],\n                (oldSub && oldSub[2](), newSub[0](dispatch, newSub[1])),\n              ]\n            : oldSub\n          : oldSub && oldSub[2]()\n      );\n    }\n    return subs\n  };\n\n  var getKey = (vdom) => (vdom == null ? vdom : vdom.key);\n\n  var patchProperty = (node, key, oldValue, newValue, listener, isSvg) => {\n    if (key === \"style\") {\n      for (var k in { ...oldValue, ...newValue }) {\n        oldValue = newValue == null || newValue[k] == null ? \"\" : newValue[k];\n        if (k[0] === \"-\") {\n          node[key].setProperty(k, oldValue);\n        } else {\n          node[key][k] = oldValue;\n        }\n      }\n    } else if (key[0] === \"o\" && key[1] === \"n\") {\n      if (\n        !((node.events || (node.events = {}))[(key = key.slice(2))] = newValue)\n      ) {\n        node.removeEventListener(key, listener);\n      } else if (!oldValue) {\n        node.addEventListener(key, listener);\n      }\n    } else if (!isSvg && key !== \"list\" && key !== \"form\" && key in node) {\n      node[key] = newValue == null ? \"\" : newValue;\n    } else if (newValue == null || newValue === false) {\n      node.removeAttribute(key);\n    } else {\n      node.setAttribute(key, newValue);\n    }\n  };\n\n  var createNode = (vdom, listener, isSvg) => {\n    var props = vdom.props;\n    var node =\n      vdom.type === TEXT_NODE\n        ? document.createTextNode(vdom.tag)\n        : (isSvg = isSvg || vdom.tag === \"svg\")\n        ? document.createElementNS(SVG_NS, vdom.tag, props.is && props)\n        : document.createElement(vdom.tag, props.is && props);\n\n    for (var k in props) {\n      patchProperty(node, k, null, props[k], listener, isSvg);\n    }\n\n    for (var i = 0; i < vdom.children.length; i++) {\n      node.appendChild(\n        createNode(\n          (vdom.children[i] = maybeVNode(vdom.children[i])),\n          listener,\n          isSvg\n        )\n      );\n    }\n\n    return (vdom.node = node)\n  };\n\n  var patch = (parent, node, oldVNode, newVNode, listener, isSvg) => {\n    if (oldVNode === newVNode) ; else if (\n      oldVNode != null &&\n      oldVNode.type === TEXT_NODE &&\n      newVNode.type === TEXT_NODE\n    ) {\n      if (oldVNode.tag !== newVNode.tag) node.nodeValue = newVNode.tag;\n    } else if (oldVNode == null || oldVNode.tag !== newVNode.tag) {\n      node = parent.insertBefore(\n        createNode((newVNode = maybeVNode(newVNode)), listener, isSvg),\n        node\n      );\n      if (oldVNode != null) {\n        parent.removeChild(oldVNode.node);\n      }\n    } else {\n      var tmpVKid;\n      var oldVKid;\n\n      var oldKey;\n      var newKey;\n\n      var oldProps = oldVNode.props;\n      var newProps = newVNode.props;\n\n      var oldVKids = oldVNode.children;\n      var newVKids = newVNode.children;\n\n      var oldHead = 0;\n      var newHead = 0;\n      var oldTail = oldVKids.length - 1;\n      var newTail = newVKids.length - 1;\n\n      isSvg = isSvg || newVNode.tag === \"svg\";\n\n      for (var i in { ...oldProps, ...newProps }) {\n        if (\n          (i === \"value\" || i === \"selected\" || i === \"checked\"\n            ? node[i]\n            : oldProps[i]) !== newProps[i]\n        ) {\n          patchProperty(node, i, oldProps[i], newProps[i], listener, isSvg);\n        }\n      }\n\n      while (newHead <= newTail && oldHead <= oldTail) {\n        if (\n          (oldKey = getKey(oldVKids[oldHead])) == null ||\n          oldKey !== getKey(newVKids[newHead])\n        ) {\n          break\n        }\n\n        patch(\n          node,\n          oldVKids[oldHead].node,\n          oldVKids[oldHead],\n          (newVKids[newHead] = maybeVNode(\n            newVKids[newHead++],\n            oldVKids[oldHead++]\n          )),\n          listener,\n          isSvg\n        );\n      }\n\n      while (newHead <= newTail && oldHead <= oldTail) {\n        if (\n          (oldKey = getKey(oldVKids[oldTail])) == null ||\n          oldKey !== getKey(newVKids[newTail])\n        ) {\n          break\n        }\n\n        patch(\n          node,\n          oldVKids[oldTail].node,\n          oldVKids[oldTail],\n          (newVKids[newTail] = maybeVNode(\n            newVKids[newTail--],\n            oldVKids[oldTail--]\n          )),\n          listener,\n          isSvg\n        );\n      }\n\n      if (oldHead > oldTail) {\n        while (newHead <= newTail) {\n          node.insertBefore(\n            createNode(\n              (newVKids[newHead] = maybeVNode(newVKids[newHead++])),\n              listener,\n              isSvg\n            ),\n            (oldVKid = oldVKids[oldHead]) && oldVKid.node\n          );\n        }\n      } else if (newHead > newTail) {\n        while (oldHead <= oldTail) {\n          node.removeChild(oldVKids[oldHead++].node);\n        }\n      } else {\n        for (var keyed = {}, newKeyed = {}, i = oldHead; i <= oldTail; i++) {\n          if ((oldKey = oldVKids[i].key) != null) {\n            keyed[oldKey] = oldVKids[i];\n          }\n        }\n\n        while (newHead <= newTail) {\n          oldKey = getKey((oldVKid = oldVKids[oldHead]));\n          newKey = getKey(\n            (newVKids[newHead] = maybeVNode(newVKids[newHead], oldVKid))\n          );\n\n          if (\n            newKeyed[oldKey] ||\n            (newKey != null && newKey === getKey(oldVKids[oldHead + 1]))\n          ) {\n            if (oldKey == null) {\n              node.removeChild(oldVKid.node);\n            }\n            oldHead++;\n            continue\n          }\n\n          if (newKey == null || oldVNode.type === SSR_NODE) {\n            if (oldKey == null) {\n              patch(\n                node,\n                oldVKid && oldVKid.node,\n                oldVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              );\n              newHead++;\n            }\n            oldHead++;\n          } else {\n            if (oldKey === newKey) {\n              patch(\n                node,\n                oldVKid.node,\n                oldVKid,\n                newVKids[newHead],\n                listener,\n                isSvg\n              );\n              newKeyed[newKey] = true;\n              oldHead++;\n            } else {\n              if ((tmpVKid = keyed[newKey]) != null) {\n                patch(\n                  node,\n                  node.insertBefore(tmpVKid.node, oldVKid && oldVKid.node),\n                  tmpVKid,\n                  newVKids[newHead],\n                  listener,\n                  isSvg\n                );\n                newKeyed[newKey] = true;\n              } else {\n                patch(\n                  node,\n                  oldVKid && oldVKid.node,\n                  null,\n                  newVKids[newHead],\n                  listener,\n                  isSvg\n                );\n              }\n            }\n            newHead++;\n          }\n        }\n\n        while (oldHead <= oldTail) {\n          if (getKey((oldVKid = oldVKids[oldHead++])) == null) {\n            node.removeChild(oldVKid.node);\n          }\n        }\n\n        for (var i in keyed) {\n          if (newKeyed[i] == null) {\n            node.removeChild(keyed[i].node);\n          }\n        }\n      }\n    }\n\n    return (newVNode.node = node)\n  };\n\n  var propsChanged = (a, b) => {\n    for (var k in a) if (a[k] !== b[k]) return true\n    for (var k in b) if (a[k] !== b[k]) return true\n  };\n\n  var maybeVNode = (newVNode, oldVNode) =>\n    newVNode !== true && newVNode !== false && newVNode\n      ? typeof newVNode.tag === \"function\"\n        ? ((!oldVNode ||\n            oldVNode.memo == null ||\n            propsChanged(oldVNode.memo, newVNode.memo)) &&\n            ((oldVNode = newVNode.tag(newVNode.memo)).memo = newVNode.memo),\n          oldVNode)\n        : newVNode\n      : text(\"\");\n\n  var recycleNode = (node) =>\n    node.nodeType === TEXT_NODE\n      ? text(node.nodeValue, node)\n      : createVNode(\n          node.nodeName.toLowerCase(),\n          EMPTY_OBJ,\n          map.call(node.childNodes, recycleNode),\n          SSR_NODE,\n          node\n        );\n\n  var createVNode = (tag, { key, ...props }, children, type, node) => ({\n    tag,\n    props,\n    key,\n    children,\n    type,\n    node,\n  });\n\n  var memo = (tag, memo) => ({ tag, memo });\n\n  var text = (value, node) =>\n    createVNode(value, EMPTY_OBJ, EMPTY_ARR, TEXT_NODE, node);\n\n  var h = (tag, { class: c, ...props }, children = EMPTY_ARR) =>\n    createVNode(\n      tag,\n      { ...props, ...(c ? { class: createClass(c) } : EMPTY_OBJ) },\n      isArray(children) ? children : [children]\n    );\n\n  var app = ({\n    node,\n    view,\n    subscriptions,\n    dispatch = id$1,\n    init = EMPTY_OBJ,\n  }) => {\n    var vdom = node && recycleNode(node);\n    var subs = [];\n    var state;\n    var busy;\n\n    var update = (newState) => {\n      if (state !== newState) {\n        if ((state = newState) == null) dispatch = subscriptions = render = id$1;\n        if (subscriptions) subs = patchSubs(subs, subscriptions(state), dispatch);\n        if (view && !busy) enqueue(render, (busy = true));\n      }\n    };\n\n    var render = () =>\n      (node = patch(\n        node.parentNode,\n        node,\n        vdom,\n        (vdom = view(state)),\n        listener,\n        (busy = false)\n      ));\n\n    var listener = function (event) {\n      dispatch(this.events[event.type], event);\n    };\n\n    return (\n      (dispatch = dispatch((action, props) =>\n        typeof action === \"function\"\n          ? dispatch(action(state, props))\n          : isArray(action)\n          ? typeof action[0] === \"function\"\n            ? dispatch(action[0], action[1])\n            : action\n                .slice(1)\n                .map(\n                  (fx) => fx && fx !== true && (fx[0] || fx)(dispatch, fx[1]),\n                  update(action[0])\n                )\n          : update(action)\n      ))(init),\n      dispatch\n    )\n  };\n\n  const adjectives = [\n    \"pretty\",\n    \"large\",\n    \"big\",\n    \"small\",\n    \"tall\",\n    \"short\",\n    \"long\",\n    \"handsome\",\n    \"plain\",\n    \"quaint\",\n    \"clean\",\n    \"elegant\",\n    \"easy\",\n    \"angry\",\n    \"crazy\",\n    \"helpful\",\n    \"mushy\",\n    \"odd\",\n    \"unsightly\",\n    \"adorable\",\n    \"important\",\n    \"inexpensive\",\n    \"cheap\",\n    \"expensive\",\n    \"fancy\",\n  ];\n\n  const colors = [\n    \"red\",\n    \"yellow\",\n    \"blue\",\n    \"green\",\n    \"pink\",\n    \"brown\",\n    \"purple\",\n    \"brown\",\n    \"white\",\n    \"black\",\n    \"orange\",\n  ];\n\n  const nouns = [\n    \"table\",\n    \"chair\",\n    \"house\",\n    \"bbq\",\n    \"desk\",\n    \"car\",\n    \"pony\",\n    \"cookie\",\n    \"sandwich\",\n    \"burger\",\n    \"pizza\",\n    \"mouse\",\n    \"keyboard\",\n  ];\n\n  let id = 1;\n\n  const random = (max) => Math.round(Math.random() * 1000) % max;\n\n  const buildData = (count) => {\n    let data = [];\n    for (let i = 0; i < count; i++)\n      data.push({\n        id: id++,\n        label:\n          adjectives[random(adjectives.length)] +\n          \" \" +\n          colors[random(colors.length)] +\n          \" \" +\n          nouns[random(nouns.length)],\n      });\n    return data\n  };\n\n  const updateRow = (id, label) => ({\n    id,\n    label: label + \" !!!\",\n  });\n\n  const append1K = (state) => ({\n    data: state.data.concat(buildData(1000)),\n  });\n\n  const create1K = () => ({\n    data: buildData(1000),\n  });\n\n  const create10K = () => ({\n    data: buildData(10000),\n  });\n\n  const clearAllRows = () => ({\n    data: [],\n  });\n\n  const deleteRow = (state, id) => ({\n    data: state.data.filter((d) => d.id !== id),\n  });\n\n  const updateEveryTenth = (state) => ({\n    data: state.data.map((d, i) => (i % 10 === 0 ? updateRow(d.id, d.label) : d)),\n    selected: undefined,\n  });\n\n  const selectRow = (state, id) => ({\n    data: state.data,\n    selected: id,\n  });\n\n  const swapRows = (state) => {\n    if (state.data.length <= 998) return state\n\n    const temp = state.data[1];\n    state.data[1] = state.data[998];\n    state.data[998] = temp;\n\n    return {\n      data: state.data,\n      selected: state.selected,\n    }\n  };\n\n  const Row = ({ data, label, styleClass }) =>\n    h(\"tr\", { key: data.id, class: styleClass }, [\n      h(\"td\", { class: \"col-md-1\" }, text(data.id)),\n      h(\"td\", { class: \"col-md-4\" },\n        h(\"a\", { onclick: [ selectRow, data.id ] }, text(label)),\n      ),\n      h(\"td\", { class: \"col-md-1\" },\n        h(\"a\", { onclick: [ deleteRow, data.id ] },\n          h(\"span\", {\n            class: \"glyphicon glyphicon-remove\",\n            \"aria-hidden\": \"true\",\n          })\n        ),\n      ),\n      h(\"td\", { class: \"col-md-6\" }),\n    ]);\n\n  app({\n    init: {\n      data: [],\n      selected: false,\n    },\n    view: (state) =>\n      h(\"div\", { class: \"container\" }, [\n        h(\"div\", { class: \"jumbotron\" },\n          h(\"div\", { class: \"row\" }, [\n            h(\"div\", { class: \"col-md-6\" }, h(\"h1\", {}, text(\"Hyperapp\"))),\n            h(\"div\", { class: \"col-md-6\" },\n              h(\"div\", { class: \"row\" }, [\n                h(\"div\", { class: \"col-sm-6 smallpad\" },\n                  h(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-primary btn-block\",\n                      id: \"run\",\n                      onclick: create1K,\n                    },\n                    text(\"Create 1,000 rows\")\n                  )\n                ),\n                h(\"div\", { class: \"col-sm-6 smallpad\" },\n                  h(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-primary btn-block\",\n                      id: \"runlots\",\n                      onclick: create10K,\n                    },\n                    text(\"Create 10,000 rows\")\n                  )\n                ),\n                h(\"div\", { class: \"col-sm-6 smallpad\" },\n                  h(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-primary btn-block\",\n                      id: \"add\",\n                      onclick: append1K,\n                    },\n                    text(\"Append 1,000 rows\")\n                  )\n                ),\n                h(\"div\", { class: \"col-sm-6 smallpad\" },\n                  h(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-primary btn-block\",\n                      id: \"update\",\n                      onclick: updateEveryTenth,\n                    },\n                    text(\"Update every 10th row\")\n                  )\n                ),\n                h(\"div\", { class: \"col-sm-6 smallpad\" },\n                  h(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-primary btn-block\",\n                      id: \"clear\",\n                      onclick: clearAllRows,\n                    },\n                    text(\"Clear\")\n                  )\n                ),\n                h(\"div\", { class: \"col-sm-6 smallpad\" },\n                  h(\"button\", {\n                      type: \"button\",\n                      class: \"btn btn-primary btn-block\",\n                      id: \"swaprows\",\n                      onclick: swapRows,\n                    },\n                    text(\"Swap Rows\")\n                  )\n                )\n              ])\n            )]\n          )\n        ),\n        h(\"table\", { class: \"table table-hover table-striped test-data\" },\n          h(\"tbody\", {}, state.data.map((data) => memo(Row, {\n                data,\n                label: data.label,\n                styleClass: data.id === state.selected ? \"danger\" : \"\",\n            }))\n          )\n        ),\n        h(\"span\", {\n          class: \"preloadicon glyphicon glyphicon-remove\",\n          \"aria-hidden\": \"true\",\n        })\n      ]),\n    node: document.getElementById(\"app\"),\n  });\n\n})();\n"]}